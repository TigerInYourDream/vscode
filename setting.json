{
  "LineNumberDeco.enableRainbow": true,
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "cmake.showOptionsMovedNotification": false,
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.fontFamily": "'Jetbrains Mono','Mononoki Nerd Font', monospace",
  "editor.fontLigatures": true,
  "editor.minimap.enabled": false,
  // "editor.renderWhitespace": "all",
  "editor.suggest.insertMode": "replace",
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "files.autoSave": "afterDelay",
  "git.autofetch": true,
  "git.openRepositoryInParentFolders": "never",
  "gitlens.rebaseEditor.ordering": "asc",
  "nerdtree.alwaysShowSidebar": false,
  "search.exclude": {
    "**/*.bundle.js": true,
    "**/.git": true,
    "**/bin-packages": true,
    "**/frontend-dist": true,
    "**/npm-packages-offline-cache": true
  },
  "search.useGlobalIgnoreFiles": true,
  "selectline.displayFormat": "(%d Lines)",
  "selectline.statusbarPriority": 101,
  "sortJSON.orderOverride": [
    "name",
    "version",
    "description"
  ],
  "sortJSON.orderUnderride": [
    "dependencies",
    "devDependencies"
  ],
  "sui-move-analyzer.server.path": "Users/zhaoyue/.cargo/bin/move-analyzer",
  "terminal.integrated.env.osx": {
    "CW_NEW_SESSION": "1",
    "Q_NEW_SESSION": "1"
  },
  "vim.easymotion": true,
  "vim.flash.enable": true,
  "vim.flash.labels": "hklyuiopnm,qwertzxcvbasdgjf",
  "vim.foldfix": true,
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-n>": false
  },
  "vim.highlightedyank.duration": 350,
  "vim.highlightedyank.color": "rgba(230, 97, 89, 0.7)",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.textColor": "white",
  "vim.hlsearch": true,
  "vim.ignorecase": true,
  "vim.replaceWithRegister": true,
  "vim.surround": true,
  "editor.cursorSurroundingLines": 8,
  "vim.insertModeKeyBindings": [
    {
      "after": [
        "<Esc>"
      ],
      "before": [
        "k",
        "j"
      ]
    },
    {
      "after": [],
      "before": [
        "<C-e>"
      ],
      "commands": [
        {
          "args": [],
          "command": "cursorEnd"
        }
      ]
    }
  ],
  "vim.leader": ",",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "g", "j"], // Jump to next Git change
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["<leader>", "g", "k"], // Jump to previous Git change
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": [
        "H"
      ], // Focus previous tab at the left
      "commands": [
        "workbench.action.previousEditor"
      ]
    },
    {
      "before": [
        "L"
      ], // Focus next tab at the right
      "commands": [
        "workbench.action.nextEditor"
      ]
    },
    {
      "before": [
        "g",
        "h"
      ],
      "commands": [
        "editor.action.showDefinitionPreviewHover"
      ]
    },
    {
      "before": [
        "%"
      ],
      "commands": [
        "extension.matchitJumpItems"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "x"
      ],
      "commands": [
        "editor.action.smartSelect.expand"
      ]
    },
    {
      "before": [
        "<leader>",
        "q",
        "q"
      ],
      "commands": [
        "workbench.action.findInFiles"
      ]
    },
    {
      "before": [
        "<leader>",
        "f",
        "n"
      ],
      "commands": [
        "copyRelativeFilePath"
      ]
    },
    {
      "before": [
        "<leader>",
        "t",
        "p"
      ],
      "commands": [
        "workbench.action.togglePanel"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "m"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "i"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    },
    {
      "before": [
        "<leader>",
        "t",
        "a"
      ],
      "commands": [
        "workbench.action.toggleActivityBarVisibility"
      ]
    },
    {
      "before": [
        "<leader>",
        "t",
        "b"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "s"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "s",
        "s"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      "before": [
        "<leader>",
        "s",
        "i"
      ],
      "commands": [
        "extension.matchitSelectItems"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "f"
      ],
      "commands": [
        "workbench.action.files.openFile"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "e"
      ],
      "commands": [
        "nerdtree.fileExplorer"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "k"
      ],
      "commands": [
        "workbench.action.closeActiveEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "r",
        "r"
      ],
      "commands": [
        "workbench.action.openRecent"
      ]
    },
    {
      "before": [
        "<leader>",
        "r",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpenLeastRecentlyUsedEditor"
      ]
    },
    {
      "before": [
        "<leader>",
        "i",
        "i"
      ],
      "commands": [
        "workbench.action.gotoSymbol"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "1"
      ],
      "commands": [
        "workbench.action.editorLayoutSingle"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "3"
      ],
      "commands": [
        "workbench.action.splitEditorRight"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "2"
      ],
      "commands": [
        "workbench.action.splitEditorDown"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "4"
      ],
      "commands": [
        "workbench.action.editorLayoutTwoByTwoGrid"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "0"
      ],
      "commands": [
        "workbench.action.closeGroup"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "z"
      ],
      "commands": [
        "workbench.action.terminal.focus"
      ]
    },
    {
      "before": [
        "<leader>",
        "f",
        "f"
      ],
      "commands": [
        "workbench.action.toggleZenMode"
      ]
    },
    {
      "after": [
        ":wq"
      ],
      "before": [
        "<leader>",
        "w",
        "q"
      ]
    },
    {
      "before": [
        "<leader>",
        "k",
        "k"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "e"
      ],
      "commands": [
        "workbench.explorer.fileView.focus"
      ]
    },
    {
      "after": [
        "\"",
        "_",
        "x"
      ],
      "before": [
        "x"
      ]
    },
    {
      "before": [
        "leader",
        "w"
      ],
      "commands": [
        "workbench.action.files.save"
      ]
    },
    {
      "before": [
        "<leader>",
        "m"
      ],
      "commands": [
        "bookmarks.toggle"
      ]
    },
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "bookmarks.listFromAllFiles"
      ]
    },
    {
      // for fold and unfold bug
      "before": [
        "j"
      ],
      "commands": [
        "cursorDown"
      ]
    },
    {
      // for fold and unfold bug
      "before": [
        "k"
      ],
      "commands": [
        "cursorUp"
      ]
    },
    {
      "after": [],
      "before": [
        "<C-e>"
      ],
      "commands": [
        {
          "args": [],
          "command": "cursorEnd"
        }
      ]
    },
    {
      "after": [],
      "before": [
        "<leader>",
        "c",
        "a"
      ],
      "commands": [
        {
          "args": [],
          "command": "editor.action.quickFix"
        }
      ]
    },
    {
      "before": [
        "g",
        "i"
      ],
      "commands": [
        "editor.action.goToImplementation"
      ]
    },
    {
      "before": [
        "[",
        "d"
      ],
      "commands": [
        "editor.action.marker.prev"
      ]
    },
    {
      "before": [
        "]",
        "d"
      ],
      "commands": [
        "editor.action.marker.next"
      ]
    },
    {
      "before": [
        "<leader>",
        "b"
      ],
      "commands": [
        "extension.toggleBool"
      ],
      "when": "editorTextFocus"
    },
    {
      "before": [
        "m"
      ],
      "commands": [
        "bo.vimBookMarkTrigger"
      ]
    },
    {
      "before": [
        "d"
      ],
      "after": [
        "\"",
        "_",
        "d"
      ]
    },
    {
        // delete inner line
        "before": ["d", "i", "l"],
        "after": ["^", "d", "g", "_"],
    },
    {
        // change inner line
        "before": ["c", "i", "l"],
        "after": ["^", "c", "g", "_"],
    },
    {
        // go replace inner line
        "before": ["g", "r", "i", "l"],
        "after": ["^", "g", "r", "g", "_"],
    },
    {
        // go UPPER inner line
        "before": ["g", "U", "i", "l"],
        "after": ["^", "g", "U", "g", "_"],
    },
    {
        // go upper inner line
        "before": ["g", "u", "i", "l"],
        "after": ["^", "g", "u", "g", "_"],
    },
  ],
  "vim.operatorPendingModeKeyBindings": [
    {
      "after": [
        "$"
      ],
      "before": [
        "L"
      ]
    },
    {
      "after": [
        "^"
      ],
      "before": [
        "H"
      ]
    }
  ],
  "vim.showMarksInGutter": true,
  "vim.statusBarColorControl": true,
  "vim.useCtrlKeys": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        "%"
      ],
      "commands": [
        "extension.matchitJumpItems"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "x"
      ],
      "commands": [
        "editor.action.smartSelect.expand"
      ]
    },
    {
      "before": [
        "<leader>",
        "z",
        "z"
      ],
      "commands": [
        "editor.action.smartSelect.shrink"
      ]
    },
    {
      "before": [
        "<leader>",
        "c",
        "i"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    },
    {
      "before": [
        "<leader>",
        "a",
        "a"
      ],
      "commands": [
        "editor.action.clipboardCopyAction"
      ]
    },
    {
      "before": [
        "<leader>",
        "q",
        "q"
      ],
      "commands": [
        "workbench.action.findInFiles"
      ]
    },
    {
      "before": [
        "<leader>",
        "s",
        "s"
      ],
      "commands": [
        "actions.find"
      ]
    },
    {
      "before": [
        "<leader>",
        "r",
        "r"
      ],
      "commands": [
        "workbench.action.openRecent"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "e"
      ],
      "commands": [
        "workbench.action.toggleActivityBarVisibility"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "e"
      ],
      "commands": [
        "workbench.files.action.focusFilesExplorer"
      ],
      "when": "editorTextFocus"
    },
    {
      "before": [
        "<leader>",
        "k"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    {
      "before": [
        "<leader>",
        "x",
        "m"
      ],
      "commands": [
        "workbench.action.showCommands"
      ]
    },
    {
      "after": [
        "\"",
        "_",
        "x"
      ],
      "before": [
        "x"
      ]
    },
    // hacks for line text object,
    {
        // select inner line
        "before": ["i", "l"],
        "after": ["^", "v", "v", "$", "o"],
    },
    {
        // select around line
        "before": ["a", "l"],
        "after": ["0", "v", "v", "$"],
    },
  ],
  "vim.visualstar": true,
  "window.commandCenter": false,
  "window.newWindowDimensions": "maximized",
  // "window.title": "${rootName}${separator}${activeEditorShort}",
  // "workbench.editor.showTabs": "single",
  "window.titleBarStyle": "native",
  "window.zoomLevel": 1,
  "workbench.colorCustomizations": {
    "statusBar.background": "#005f5f",
    "statusBar.noFolderBackground": "#005f5f",
    "statusBar.debuggingBackground": "#005f5f",
    "statusBar.foreground": "#ffffff",
    "statusBar.debuggingForeground": "#ffffff",
    "editor.findMatchBackground": "#eb1986c1"
  },
  "workbench.layoutControl.enabled": false,
  "workbench.settings.applyToAllProfiles": [
    "editor.fontFamily",
    "sui-move-analyzer.server.path"
  ],
  "zenMode.centerLayout": false,
  // we try to make semantic highlighting look good
  "editor.semanticHighlighting.enabled": true,
  // prevent VSCode from modifying the terminal colors
  "terminal.integrated.minimumContrastRatio": 1,
  // make the window's titlebar use the workbench colors
  // applicable if you use Go, this is an opt-in flag!
  "gopls": {
    "ui.semanticTokens": false,
  },
  "catppuccin.italicKeywords": false,
  "catppuccin.italicComments": false,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "name": "Comment",
        "scope": [
          "comment",
          "comment.block",
          "comment.block.documentation",
          "comment.line",
          "comment.line.double-slash",
          "punctuation.definition.comment",
        ],
        "settings": {
          "fontStyle": "",
          // "fontStyle": "italic",  // 斜体
          // "fontStyle": "italic underline",  // 斜体下划线
          // "fontStyle": "italic bold underline",  // 斜体粗体下划线
        }
      },
    ]
  },
  "terminal.integrated.allowedLinkSchemes": [
    "file",
    "http",
    "https",
    "mailto",
    "vscode",
    "vscode-insiders",
    "docker-desktop"
  ],
  "cSpell.userWords": [
    "abbrlink",
    "actix",
    "autocxx",
    "autofetch",
    "bindgen",
    "catppuccin",
    "clippy",
    "codetour",
    "Condvar",
    "dashmap",
    "Deque",
    "Derf",
    "docsmsft",
    "dylib",
    "easymotion",
    "Fira",
    "foldfix",
    "gopls",
    "Gruvbox",
    "Hexo",
    "hhmmss",
    "highlightedyank",
    "hklyuiopnm",
    "hlsearch",
    "ignorecase",
    "Jetbrains",
    "libc",
    "libclang",
    "matchit",
    "Mononoki",
    "nerdtree",
    "qwertzxcvbasdgjf",
    "Reciver",
    "repr",
    "reqwest",
    "rgba",
    "rustc",
    "selectline",
    "Shenzhen",
    "thiserror",
    "TID's",
    "titlebar",
    "titlecase",
    "uncategorized",
    "Underride",
    "visualstar",
    "vscodevim",
    "Whenopen",
    "YYYYMMDDHHMMS",
  ],
  "cSpell.enabled": true,
  "editor.hover.enabled": false,
  "files.autoSaveDelay": 50,
  "workbench.hover.delay": 0,
  "workbench.sash.hoverDelay": 100,
  "errorLens.delay": 5,
  "errorLens.delayMode": "debounce",
  "editor.quickSuggestionsDelay": 5,
  "yaml.schemas": {
    "file:///Users/zhaoyue/.vscode/extensions/docsmsft.docs-yaml-1.0.4/dist/toc.schema.json": "/toc\\.yml/i"
  },
  "C_Cpp.default.compilerPath": "/opt/homebrew/opt/llvm/bin/clang++",
  "editor.fontSize": 11,
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ],
  "makefile.configureOnOpen": true,
  "workbench.activityBar.location": "hidden",
  "diffEditor.hideUnchangedRegions.enabled": true,
  "diffEditor.useInlineViewWhenSpaceIsLimited": false,
  "editor.semanticTokenColorCustomizations": {
    "enabled": true
  },
  "workbench.colorTheme": "Snazzy",
}
